<head>

<script type="text/javascript"
        src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js">
</script>

<script type="text/javascript"
        src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.js">
</script>

<script type="text/javascript">

    // Global Variables
    var file_id = -1;
    var comment_offset = -1;
    var highlight_cell_id = -1;
    var noCommentsHtml = "<br/><font style=\"color: #7a7a7a;\">No Comments yet</font>";

    /**
     * Sends the comment content corresponding to the file offset indicated by
     * global variable 'comment_offset' to the controller submit_comment which
     * inserts the comment in the database.
     */
    function ajaxSubmitComment() {
        var commentText = document.getElementById('forminput_2');

        if(!commentText.value) {
            alert('Cannot save an empty Comment');
        }
        else {
            new Ajax.Request('/review_files/submit_comment', {
                method:'get',
                parameters: {
                    file_id :file_id,
                    file_offset :comment_offset,
                    comment_content :commentText.value
                }
            });
            // Highlight the table cell (containing the line number) just clicked
            var lineNumCellDom = document.getElementById(highlight_cell_id);
            lineNumCellDom.style.fontWeight="900";
            lineNumCellDom.bgColor = "cyan";
        }
        createComments(highlight_cell_id, line_number, comment_offset, file_id);
    }

    /** HELPER METHOD
     * Hides the comment Window.
     */
    function hideCommentWindow() {
//          document.getElementById('myDiv2').innerHTML = ""
        $("#myDiv2").fadeOut();
    }

    /** HELPER METHOD
     * Constructs a link 'Close [x]' for the comment Window and returns the
     * markup as a string.
     */
    function constructCloseWindowLink() {
        var closeWindowHtml = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" +
                "<a align='right' class='line_number' href='javascript:void(0)' " +
                "onclick='hideCommentWindow()'>Close [X]</a><br>";
        return closeWindowHtml;
    }

    /** HELPER METHOD
     * Constructs a header indicating the line number corresponding to the
     * comment(s) displayed in the comment Window.
     * @params line_number The line number for which the comment Window
     *                     displays comments.
     */
    function constructWindowHeader(line_number) {
        var windowHeaderHtml = "<b style='font-size: larger;'><u>" +
                "Comments for Line# " + line_number + "</u></b><br>";

        return windowHeaderHtml;
    }
    /**
     * Displays the comments corresponding to 'line' in a comment Window.
     *
     * @param line Line number for which comments are to be displayed.
     * @param allComments Array of review_comment Objects whose comment_content
     *        is to be displayed.
     */
    function viewComments(line_number, allComments) {
        var commentWindowDom = document.getElementById('myDiv2')

        if (!allComments) {
            allComments = noCommentsHtml;//"<br/>No Comments yet";
        }
        commentWindowDom.innerHTML = constructWindowHeader(line_number) +
                allComments + constructCloseWindowLink();

        $('#myDiv2').fadeIn();
    }

    /**
     * Method to display all existing comments corresponding to the 'clicked'
     * line number and to also display the form for submitting more comments.
     *
     * @param cell_id contains the div id of the cell in the main diff display table
     *          tp be highlighted.
     * @param line Line Number for which the comments are to be displayed/saved.
     * @param offset Character offset of the beginning of this line from file start.
     * @param fileId The fileId of the review file which is being commented.
     */
    function createComments(cell_id, line_num, offset, fileId) { // or filepath

        // Store the following data in the global variables for access in another method
        file_id = fileId;
        comment_offset = offset;
        highlight_cell_id = cell_id;
        line_number = line_num;

        // Grab existing HTML of the comment window -- contains textarea for
        // writing comments plus a Submit button.
        var commentForm = document.getElementById('add_subject').innerHTML;

        // Dom corr to the comment Window. This dom will be populated with
        // (a) existing comments and (b) form to submit a new comment
        var commentWindowDom = document.getElementById('myDiv2');

        new Ajax.Request('/review_files/get_comments', {
            method: 'get',
            parameters: {
                file_id: fileId,
                file_offset: offset
            },
            onSuccess: function(return_value) {
                var all_comments = return_value.responseText ?
                        return_value.responseText : noCommentsHtml+"<br/>";//"No Comments yet<br/>";

                var commentWindowHtml = constructWindowHeader(line_num) + "<br>" +
                        all_comments + "<br>" + commentForm + constructCloseWindowLink();

                // To avoid div id contention, change name of div ids.
                commentWindowHtml = commentWindowHtml.replace("forminput","forminput_2");
                commentWindowDom.innerHTML = commentWindowHtml
                $('#myDiv2').fadeIn();
            },
            onFailure: function(){ alert("Failed to retrieve comments for this Line") }
        });
    }


</script>

<style >
    .parentDisable {
        position:absolute;
        width:250px;
        /*height:200px;*/
        top:350px;    left:250px;
        display:none;
        padding: 6px;
        z-index:3;
        color: black;
        background-color: rgba(221, 227, 226, 0.93);
        border:1px solid black;
        border-radius:5px;
        -moz-border-radius:5px;
        -webkit-border-radius:5px;
    }

    a.line_number:link {
        COLOR: black;
        text-decoration: underline;
    }
    a.line_number:visited {
        COLOR: black;
        text-decoration: underline;
    }
    a.line_number:active {
        COLOR: black;
        text-decoration: underline;
    }

    a.line_number_hover :hover {
        background-color: black;
        COLOR: white;
        text-decoration: underline;
        font-weight: bold;
    }

    .curved {
        -moz-border-radius:10px;
        -webkit-border-radius:10px;
        behavior:url(border-radius.htc);
    }

    td{ font-color: black; }

    pre{ margin: 0px; }

    .margin{ margin: 0cm; }

    #code_review_frame_div{
        border:1;
        width:100%;
        height:440px;
    }

    #version_header{
        border:1;
        width:100%;
        height:28px;
        vertical-align: middle;
    }

    tr.highlight :hover { font-weight: bold;  }

    td.version_number {
        /*background-color: #faee7f;*/
        background-color: white;
        color: black;
        border-left: thin solid gray;
        border-right: thin solid gray;
        border-top: thin solid gray;
        border-bottom: thin solid gray;
    }


    td.version_number :hover {
        font-weight: bold;
        color: blue;
    }

    td.current_version {
        /*background-color: rgb(249, 255, 0);*/
        background-color: rgb(255, 0, 28);
        color: black;
        font-weight: bold;
        border-left: thin solid black;
        border-right: thin solid black;
        border-top: thin solid black;
        border-bottom: thin solid black;
    }

    td.top_header {
        border-bottom: thin brown;
    }

    .dashboard_header_css {
        border-bottom: none;
        border-left: thin solid black;
        border-right: thin solid black;
        border-top: thin solid black;
        border-width: 1px;
        color: white;
        background-color: rgb(150, 0, 4);
    }

    .dashboard_content_css{
        border: thin solid;
        border-width: 1px;
        background-color: rgba(250, 3, 0, 0.12);
    }

    .version_diff_header {
        border-bottom: none;
        border-left: thin solid black;
        border-right:thin solid black;
        border-top: thin solid black;
        border-width: 1px;
        /*background-color: rgba(250, 3, 0, 0.37);*/
        background-color: rgb(150, 0, 4);
        color: white;
    }

    a.version_link {
        color: black;
    }

</style>

</head>


<font face="courier" size="2">

<script>
    $(document).ready (
            function() {
                $("#myDiv2").draggable();
                $("#add_subject").fadeOut(0);
            }
    );
</script>

</br>

<div id="dashboard_header" class="dashboard_header_css" >
  <table  cellpadding='3' cellspacing='4'  >
    <tr ><td class="top_header"><b style="font-size: large;"><%= File.basename(@current_review_file.filepath) %> </b><b style="font-size: smaller;">(Version <%= @current_review_file.version_number %>)</b></td></tr>
  </table>
</div>

<div id="dashboard_header" class = "dashboard_content_css" >
  <table  cellpadding='5px' cellspacing='4' >
    <tr>
      <td align="right">View Version:</td>
      <!-- Prepare the 'versions' array from the @version_fileId_map -->
      <% file_versions = [] %>
      <% @version_fileId_map.sort.each do |version, review_file_id| %>
          <% file_versions << version.to_i %>
      <% end %>

      <!-- Iterate over all hashes and display the version and link
  corresponding to each hash -->
      <% @version_fileId_map.sort.each do |each_version, review_file_id| %>
          <% if each_version.to_s == @current_review_file.version_number.to_s %>
              <td class="version_number current_version" >
                <%= link_to each_version,
                            {:controller => 'review_files',
                             :action => 'show_code_file',
                             :review_file_id => review_file_id,
                             :participant_id => @participant.id,
                             :versions => file_versions}, :class =>"version_link" %>
              </td>
          <% else %>
              <td class="version_number" >
                <%= link_to each_version,
                            {:controller => 'review_files',
                             :action => 'show_code_file',
                             :review_file_id => review_file_id,
                             :participant_id => @participant.id,
                             :versions => file_versions}, :class =>"version_link" %>
              </td>
          <% end %>

      <% end %>
    </tr>

    <tr>
      <td align="right">View Diff with:</td>
      <!-- Iterate over all hashes and display the version and link
  corresponding to each hash -->
      <% @version_fileId_map.sort.each do |each_version, review_file_id| %>
          <% if each_version.to_s == @current_review_file.version_number.to_s %>
              <td style="color: black">
                <%= each_version %>
              </td>
          <% else %>
              <td class="version_number" >
                <%= link_to each_version, {:controller => 'review_files',
                                           :action => 'show_code_file_diff',
                                           :participant_id => @participant.id,
                                           :versions => file_versions,
                                           :diff_with_file_id => review_file_id,
                                           :current_version_id => @current_review_file.id},
                            :class =>"version_link" %>
              </td>
          <% end %>

      <% end %>
    </tr>
  </table>
</div>

<br/>



<!--  THE DIV OF THE TABLE -->
<div  id="code_review_frame_div" class="margin" style= "border: thin solid;  overflow: auto; border-width: 1px;" >
  <table width="100%" cellpadding='0' cellspacing='0' style="table-layout: fixed; word-wrap: break-word;" >

    <% for i in 0..@shareObj['linearray2'].size %>

        <!-- THESE FOUR STATEMENTS DETERMINE THE COLOR OF THE ROW -->
        <!-- THESE FOUR STATEMENTS DETERMINE THE COLOR OF THE ROW -->
        <% @color = "lightgray" %>
        <% line2color = "lightgreen"%>
        <% line2_font_weight = "normal" %>

        <tr bgcolor="<%=@color%>" class="highlight">


          <!-- If map contains an entry for this line number then there exists
                a comment of this row in the html table. -->

          <% if @highlight_cell_right_file[i] %>
              <% line2color = 'cyan' %>
              <% line2_font_weight = "bold" %>
          <%end%>

            <!-- Construct a table containing the comments for this line, to be
            commentsTable contains the required markup for displaying the comments
            as a table. The contents of commentsTable are a string. -->
          <% if @highlight_cell_right_file[i] %>
              <% commentsTable = ReviewCommentsHelper::construct_comments_table(@highlight_cell_right_file[i]) %>
          <% else %>
              <% commentsTable = nil %>
          <% end %>

          <!-- Allow commenting on codefile only if this is the most recent version
            TODO AND if current user is reviewer (i.e. != author/author's team) -->
          <% if @current_review_file.version_number.to_i == file_versions.sort[-1]  %>
              <td width="4%" id="<%=i%>" bgcolor="<%=line2color%>" style=" font-weight: <%= line2_font_weight %> ; border-left: thin solid black; border-right: thin solid black; vertical-align: top;"><a class="line_number line_number_hover" style="display:block;" href="javascript:void(0)" onclick="createComments('<%= i %>', '<%= i %>', '<%=@shareObj['offsetarray2'][i]%>', '<%=@current_review_file.id %>')"><u> <pre><%= (i+1) %></pre></u></a></td>
          <% else %>
              <td width="4%" id="<%=i%>" bgcolor="<%=line2color%>" style=" font-weight: <%= line2_font_weight %> ; border-left: thin solid black; border-right: thin solid black; vertical-align: top;"><a class="line_number line_number_hover" style="display:block;" href="javascript:void(0)" onclick="viewComments('<%= i %>', '<%= commentsTable %>')"><u> <pre><%= (i+1) %></pre></u></a></td>
          <% end %>

          <!-- OFFSET FOR FILE 2  -->
          <td width="1%"></td>

          <!-- THE ACTUAL DATA LINE -->
          <td width="95%" style="vertical-align: middle;"><pre><%=@shareObj['linearray2'][i]%></pre></td>

        </tr>

    <%end%>
  </table>
</div>

  <br/><br/><%= link_to "<< Back to File Listing", :controller => 'review_files',
                             :action => 'show_all_submitted_files',
                             :participant_id => @participant.id %>


  <!--   The popup which pops up as one intends to click or view comments -->
<div id="myDiv2" class="parentDisable" onLoad="assign()"></div>
<!--  HIDDEN DIV WHICH LATER CREEPS INTO THE POPUP -->
<div id="add_subject">
  <textarea id="forminput" cols=28 rows=5></textarea> <br>
  <button onclick="ajaxSubmitComment()"><b>Save Comment</b></button>
</div>
</font>




